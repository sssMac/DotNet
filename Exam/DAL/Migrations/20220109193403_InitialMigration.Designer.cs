// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace DAL.Migrations
{
    [DbContext(typeof(ApplicationContext))]
    [Migration("20220109193403_InitialMigration")]
    partial class InitialMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("DAL.Model.Monster", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<int>("ArmorClass")
                        .HasColumnType("integer");

                    b.Property<int>("AttackModifiere")
                        .HasColumnType("integer");

                    b.Property<int>("AttackPerRound")
                        .HasColumnType("integer");

                    b.Property<int>("Damage")
                        .HasColumnType("integer");

                    b.Property<int>("DamageModifiere")
                        .HasColumnType("integer");

                    b.Property<int>("DamagePerRound")
                        .HasColumnType("integer");

                    b.Property<int>("HitPoints")
                        .HasColumnType("integer");

                    b.Property<int>("MinAC")
                        .HasColumnType("integer");

                    b.Property<string>("MonsterName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Weapon")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("Monsters");

                    b.HasData(
                        new
                        {
                            Id = new Guid("6354f5c5-a7bd-4a71-8d6c-a4c6a62cd578"),
                            ArmorClass = 7,
                            AttackModifiere = 15,
                            AttackPerRound = 1,
                            Damage = 3,
                            DamageModifiere = 2,
                            DamagePerRound = 10,
                            HitPoints = 110,
                            MinAC = 10,
                            MonsterName = "ShadowAssasin",
                            Weapon = 1
                        },
                        new
                        {
                            Id = new Guid("59e26b42-1b90-415a-8fc9-63563029b114"),
                            ArmorClass = 19,
                            AttackModifiere = 13,
                            AttackPerRound = 2,
                            Damage = 4,
                            DamageModifiere = 1,
                            DamagePerRound = 10,
                            HitPoints = 134,
                            MinAC = 10,
                            MonsterName = "Dragonsoul",
                            Weapon = 1
                        },
                        new
                        {
                            Id = new Guid("51a14afb-3c36-448e-9aa4-c0d4a2c23d23"),
                            ArmorClass = 8,
                            AttackModifiere = 16,
                            AttackPerRound = 4,
                            Damage = 3,
                            DamageModifiere = 2,
                            DamagePerRound = 10,
                            HitPoints = 125,
                            MinAC = 10,
                            MonsterName = "Revenant",
                            Weapon = 4
                        });
                });

            modelBuilder.Entity("DAL.Model.Player", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<int>("ArmorClass")
                        .HasColumnType("integer");

                    b.Property<int>("AttackModifiere")
                        .HasColumnType("integer");

                    b.Property<int>("AttackPerRound")
                        .HasColumnType("integer");

                    b.Property<int>("Damage")
                        .HasColumnType("integer");

                    b.Property<int>("DamageModifiere")
                        .HasColumnType("integer");

                    b.Property<int>("DamagePerRound")
                        .HasColumnType("integer");

                    b.Property<int>("HitPoints")
                        .HasColumnType("integer");

                    b.Property<int>("MinAC")
                        .HasColumnType("integer");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Weapon")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("Players");
                });
#pragma warning restore 612, 618
        }
    }
}
